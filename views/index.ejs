<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="current-user" content="<%= username %>">

    <title>Web Chat Interface</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/stylesheets/styles.css">
    
</head>
<body>
    <div class="container">
        <div class="sidebar">
            <div class="user-profile">
                <div class="avatar">
                    <!-- <img src="https://ui-avatars.com/api/?name=ducchinhpro123" alt="avatar"> -->
                    <% if (locals.username) { %>
                        <img src="https://api.dicebear.com/9.x/pixel-art/svg?seed=<%= username %>" alt="Avatar" class="popup-avatar">
                    <% } else { %>
                        <img src="https://ui-avatars.com/api/?name=ducchinhpro123" alt="avatar">
                    <% } %>
                    <span class="status online"></span>
                </div>
                <div class="user-info">
                    <% if (locals.username) { %>
                        <h3><%= username %></h3>
                    <% } else { %>
                        <h3>Annonymous</h3>
                    <% } %>
                    <p class="status-text">Online</p>
                </div>
                <button class="settings-btn" id="settingsBtn">
                    <i class="fas fa-cog"></i>
                </button>
                <!--  POP UP WINDOW when user click on setting button -->
                <div class="settings-popup" id="settingsPopup">
                    <div class="popup-content">
                        <div class="user-info">
                            <img src="https://api.dicebear.com/9.x/pixel-art/svg?seed=<%= username %>" alt="Avatar" class="popup-avatar">
                            <div class="user-details">
                                <span class="username"><%= username %></span>
                                <span class="status">Online</span>
                            </div>
                        </div>
                        <div class="popup-divider"></div>
                        <div class="popup-menu">
                            <a href="/users/profile" class="menu-item">
                                <i class="fas fa-user"></i>
                                Profile
                            </a>
                            <a href="/users/settings" class="menu-item">
                                <i class="fas fa-sliders-h"></i>
                                Settings
                            </a>
                            <form action="/users/logout" method="GET" id="logoutForm">
                                <button type="submit" class="menu-item logout-btn">
                                    <i class="fas fa-sign-out-alt"></i>
                                    Logout
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <!--  ------ POP UP WINDOW when user click on setting button ----- --->

            </div>

            <div class="search-box">
                <i class="fas fa-search"></i>
                <input type="text" placeholder="Search channels...">
            </div>

            <div class="channels">
                <div class="channels-header">
                    <h4>Channels</h4>
                    <button class="add-channel-btn">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
                
                <div class="channel-list">
                    <div class="channel active">
                        <div class="channel-icon">#</div>
                        <div class="channel-info">
                            <h4>general</h4>
                            <p>Latest message here...</p>
                        </div>
                        <div class="channel-meta">
                            <span class="time">12:30</span>
                            <span class="unread">3</span>
                        </div>
                    </div>

                    <!-- More channels -->
                    <div class="channel">
                        <div class="channel-icon">#</div>
                        <div class="channel-info">
                            <h4>random</h4>
                            <p>Latest message here...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="chat-area">
            <div class="chat-header">
                <div class="chat-header-info">
                    <h2>#general</h2>
                    <p>32 members</p>
                </div>
                <div class="chat-header-actions">
                    <button><i class="fas fa-user-plus"></i></button>
                    <button><i class="fas fa-info-circle"></i></button>
                </div>
            </div>

            <div class="messages">
                <div class="date-divider">
                    <span>Today</span>
                </div>
                <!-- <div class="message own-message"> -->
                <!--     <img src="https://ui-avatars.com/api/?name=ducchinhpro123" alt="avatar" class="message-avatar"> -->
                <!--     <div class="message-content"> -->
                <!--         <div class="message-header"> -->
                <!--             <h4>You</h4> -->
                <!--             <span class="time">12:31 PM</span> -->
                <!--         </div> -->
                <!--         <p>Hello! How's everyone doing?</p> -->
                <!--     </div> -->
                <!-- </div> -->
            </div>

            <div class="input-area">
                <div class="attach-wrapper">
                    <button class="attach-btn">
                        <i class="fas fa-plus-circle"></i>
                    </button>
                    <div class="attach-options">
                        <button type="button"><i class="far fa-smile"></i></button>
                        <button type="button"><i class="fas fa-paperclip"></i></button>
                    </div>
                </div>
                
                <form class="input-wrapper" id="msgForm">
                    <input id="msgInput" type="text" placeholder="Message #general">
                    <!-- <div class="input-actions">
                        <button type="button"><i class="far fa-smile"></i></button>
                        <button type="button"><i class="fas fa-paperclip"></i></button>
                    </div> -->
                    <button class="send-btn" type="submit">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </form>
            </div>
        </div>
    </div>
</body>
<script src="/socket.io/socket.io.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        function getWSToken() {
            const cookies = document.cookie.split(';')
                .map(cookie => cookie.trim())
                .reduce((acc, curr) => {
                    const [key, value] = curr.split('=');
                    acc[key] = value;
                    return acc;
                }, {});

            return cookies['wsToken'];
        }
        const token = getWSToken();
        const socket = io({
            ackTimeout: 10000,
            retries: 3,
            transports: ['websocket'],
            upgrade: false,
            auth: { token }
        });

        socket.on('connect', () => {
            console.log(`${socket} connected successfully`);
        });

        const msgInput = document.getElementById('msgInput');
        const msgForm = document.getElementById('msgForm');
        const messagesContainer = document.querySelector('.messages');

        msgForm.removeEventListener('submit', handleSubmit);

        function handleSubmit(e) {
            e.preventDefault();
            if (msgInput.value) {
                // Send message to server
                socket.emit('chat', msgInput.value, (ack) => {
                    msgInput.disabled = false;
                    msgInput.value = '';
                    msgInput.focus();
                });
            }
        }
        msgForm.addEventListener('submit', handleSubmit);

        // Handle incomming message. Here is how msg contains
        /*
        io.emit('message', {
          content: msg,
          username: socket.user.username,
          userId: socket.user._id,
          timestamp: new Date()
        });
         */
        socket.on('message', (msg) => {
            appendToChatMessages(msg);
        });
        
        socket.on('disconnect', (msg) => {
            console.log('Disconnected: ', msg);
        })

        function appendToChatMessages(msg) {
            const currentUser = 'chinhcom';
            <!-- const currentUser = window.CURRENT_USER; -->
            const CURRENT_USER = '<%= username %>';
            console.log(CURRENT_USER);

            const msgDiv = document.createElement('div');
            msgDiv.className = 'message';

            const msgDate = new Date(msg.timestamp);
            const today = new Date();

            if (!document.querySelector('.date-divider')) {
                const dateDivider = document.createElement('div');
                dateDivider.className = 'date-divider';
                dateDivider.innerHTML = `<span>${isToday(msgDate) ? 'Today' : msgDate.toLocaleString()}</span>`
                messagesContainer.appendChild(dateDivider);
            }

            const isOwnMsg = msg.username === CURRENT_USER;
            msgDiv.className = `message ${isOwnMsg ? 'own-message' : ''}`;

            msgDiv.innerHTML = `
                <img src="https://ui-avatars.com/api/?name=${encodeURIComponent(msg.username)}" alt="avatar" class="message-avatar">
                <div class="message-content">
                    <div class="message-header">
                        <h4>${isOwnMsg ? 'You' : msg.username}</h4>
                        <span class="time">${msgDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>
                    </div>
                    <p>${msg.content}</p>
                </div>
            `;

            messagesContainer.appendChild(msgDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        function isToday(date) {
            const today = new Date();
            return date.getDate() === today.getDay() 
            && date.getMonth() === today.getMonth()
            && date.getFullYear() === today.getFullYear();
        }
    });

</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const settingsButton = document.getElementById('settingsBtn');
        const settingsPopup = document.getElementById('settingsPopup');

        function positionPopup() {
            const btnRect = settingsBtn.getBoundingClientRect();
            settingsPopup.style.top = btnRect.bottom + 8 + 'px';
            settingsPopup.style.right = window.innerWidth - btnRect.right - 40 + 'px';
        }

        // Handle the case when user click on background
        document.addEventListener('click', (e) => {
            if (!settingsButton.contains(e.target) && !settingsPopup.contains(e.target)) {
                settingsPopup.classList.remove('active');
            }
        });

        // Toggle popup window
        settingsButton.addEventListener('click', (e) => {
            e.stopPropagation();
            const isActive = settingsPopup.classList.contains('active');
            if (!isActive) {
                positionPopup();
            }
            settingsPopup.classList.toggle('active');
        });
    })

    const attachBtn = document.querySelector('.attach-btn');
const attachOptions = document.querySelector('.attach-options');

attachBtn.addEventListener('click', () => {
    // Toggle hiển thị bảng lựa chọn
    attachOptions.style.display = attachOptions.style.display === 'flex' ? 'none' : 'flex';
});

// Ẩn bảng khi nhấn ra ngoài
document.addEventListener('click', (event) => {
    if (!attachBtn.contains(event.target) && !attachOptions.contains(event.target)) {
        attachOptions.style.display = 'none';
    }
});

</script>

</html>
